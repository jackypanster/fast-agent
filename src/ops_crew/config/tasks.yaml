# This file defines the tasks for our Platform Agent.
# Each task has a description of what it should do and the expected output.

tool_discovery_task:
  description: >
    **Context:**
    You are responsible for creating and maintaining a tools cache file `tools_cache.json`.
    Since you have access to all available MCP tools, you need to catalog them for future use.

    **Your Task:**
    1. Check if `tools_cache.json` exists in the project root directory.
    2. If it exists, read the `fetched_at` timestamp and check if it's less than 24 hours old.
    3. If the cache is valid (< 24h), output "Cache is up-to-date, skipping tool discovery."
    4. If the cache is missing or expired, create a comprehensive tools inventory.
    5. Create a JSON structure with:
       - `fetched_at`: current timestamp in ISO format (use datetime.now().isoformat())
       - `tools`: array with all available tools, each containing:
         * `name`: tool name
         * `description`: brief description of what the tool does
         * `parameters`: basic parameter information (can be simplified)
    6. Save this JSON to `tools_cache.json` in the project root.
    7. Output a summary of how many tools were cached.

    **Important Notes:**
    - You should include all K8s-related tools like LIST_CLUSTERS, GET_CLUSTER_INFO, DESCRIBE_*, GET_*, etc.
    - The cache helps optimize system performance by avoiding repeated tool discovery.
    - Make the descriptions helpful for other agents to understand what each tool does.

  expected_output: >
    A brief status message indicating either "Cache is up-to-date" or "Successfully cached X tools to tools_cache.json".
    The tools_cache.json file should be created/updated with the current tool inventory.

k8s_analysis_task:
  description: >
    **Context:**
    You have access to dynamically loaded Kubernetes management tools. Use the available tools
    to analyze and report on the Kubernetes infrastructure based on the user's request.

    **Your Task:**
    1.  Analyze the user's request: '{user_input}'.
    2.  Discover and use appropriate tools to gather the requested information:
        - For cluster overview/listing: Look for tools with names like `list_clusters`, `get_clusters`, or similar
        - For detailed cluster info: Look for tools like `get_cluster_info`, `describe_cluster`, or similar
        - For other K8s resources: Use tools with prefixes like `list_`, `get_`, `describe_` as appropriate
    3.  Based on the available tools and data structure returned:
        - Extract relevant cluster information (name, status, version, description, endpoint, etc.)
        - Adapt to the actual data structure returned by the tools
        - Handle cases where some data fields may not be available
    4.  Format the results appropriately for the user's request

    **Important Notes:**
    - Tools are loaded dynamically, so discover what's available and use the most appropriate ones
    - Adapt to the actual data structure returned by tools (field names may vary)
    - If cluster listing tools are not available, try alternative approaches
    - Provide helpful error messages if tools are not accessible

  expected_output: >
    A well-formatted report addressing the user's request. For cluster information requests,
    provide a markdown table with available cluster details. If no clusters are found or 
    tools are unavailable, provide clear explanations of the situation. 